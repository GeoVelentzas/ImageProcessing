function [SNR_Dq, CR_Dq] = idct_quant(Q_Y, Q_Cb, Q_Cr, I, q)
% Η συναρτηση αυτη δεχεται ως ορισματα την εικονα Ι , τους κβαντισμενους
% 8x8 πινακες DCT και την παραμετρο κβαντισμου q και επιστρεφει τον
% σηματοθορυβικο λογο SNR και το compression rate - CR


% Εδω υπολογιζουμε το συνολικο πληθος των μη μηδενικων στοιχειων των
% κβαντισμένων πινάκων DCT καθως θεωρούμε οτι χρειαζομαστε τοσα σε πληθος
% bytes για αποθηκευση της εικονας οσα και τα στοιχεια αυτα. Αρα
% πολλαπλασιαζοντας με 8 θα εχουμε το πληθος των bits
bits_Iq_Y  = size(find(Q_Y),1)*8;           %πληθος μη μηδενικων στοιχειων του Q_Y (*8 -> bits)
bits_Iq_Cb = size(find(Q_Cb),1)*8;          %πληθος μη μηδενικων στοιχειων του Q_Cb(*8 -> bits)
bits_Iq_Cr = size(find(Q_Cr),1)*8;          %πληθος μη μηδενικων στοιχειων του Q_Cr(*8 -> bits)
bits_Iq = bits_Iq_Y+bits_Iq_Cb+bits_Iq_Cr;  %συνολικο πληθος bits για αποθηκευση πληροφοριας 

% Eδω υπολογιζουμε το πληθος των συνολικων bits της αρχικης εικονας
bits_I_R = size(I,1)*size(I,2)*8;           %πληθος bits στο πρωτο καναλι
bits_I = 3 * bits_I_R;                      %συνολικα bits αρχικης εικονας

% Καλειται για καθε καναλι η i_quant (βλεπε i_quant για επεξηγηση)
Q_Y  = blkproc(Q_Y, [8 8],'i_quant_Y',q);
Q_Cb = blkproc(Q_Cb,[8 8],'i_quant_C',q);
Q_Cr = blkproc(Q_Cr,[8 8],'i_quant_C',q);

% Aντιστροφος 8x8 blockwise DCT για καθε καναλι
iq_Y  = blkproc(Q_Y, [8 8],'idct2');
iq_Cb = blkproc(Q_Cb,[8 8],'idct2');
iq_Cr = blkproc(Q_Cr,[8 8],'idct2');

% Δημιουργια του 3-D ανακατασκευασμενου πινακα YCbCr
iq_YCbCr(:,:,1) = iq_Y;
iq_YCbCr(:,:,2) = iq_Cb;
iq_YCbCr(:,:,3) = iq_Cr;

% H ycbcr2rgb θελει ορισματα απο 0-1!!! Γι'αυτο διαιρω με το 255 πριν την
% κληση της. Συτο ειναι και το δευτερο bug που ψαχναμε στο εργαστηριο!!!
Iq = ycbcr2rgb(iq_YCbCr/255);

% ΠΡΟΣΟΧΗ. H SNR σ'αυτο το εργαστηριο δεχεται ως ορισματα εικονα και θορυβο
% σε αντιθεση με τα προηγουμενα εργαστηρια που δεχοταν εικονα και
% θορυβοποιημενη εικονα.
SNR_Dq = snr(I,I-Iq);

% Υπολογισμος του CR βαση του γνωστου τυπου
CR_Dq = bits_I/bits_Iq;


end

